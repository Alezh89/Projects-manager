{"version":3,"sources":["config/fbConfig.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","store/reducers/projectReducer.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","store/reducers/authReducer.js","store/reducers/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","connect","dispatch","signOut","getState","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","isLoaded","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","initiState","projects","title","projectReducer","action","project","err","ProjectSummary","authorFirstName","authorLastName","createdAt","calendar","ProjectList","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authError","signIn","credentials","signInWithEmailAndPassword","email","password","catch","useState","setEmail","setPassword","onSubmit","e","preventDefault","history","push","htmlFor","onChange","target","value","dispath","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","firstName","userFirstName","lastName","userLastName","setUserFirstName","setUserLastName","createProject","getFirebase","authorId","add","Date","setTitle","setContent","App","exact","path","component","Dashboard","ProjectDetails","SignIn","SignUp","CreateProject","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","attachAuthIsReady","useFirestoreForProfile","userProfile","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09db3b15.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBui4fDtGHkLFDwM9YquxC0WBMmP8bjiqg\",\r\n    authDomain: \"project-planner-with-react.firebaseapp.com\",\r\n    databaseURL: \"https://project-planner-with-react.firebaseio.com\",\r\n    projectId: \"project-planner-with-react\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"531862986710\",\r\n    appId: \"1:531862986710:web:66e2a451f37ed4a66e4e77\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig)\r\n\r\n\r\n  export default firebase","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating red lighten-1'>\r\n                {props.profile.initials}    \r\n            </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\r\n","import firebase from '../../config/fbConfig';\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState) => {\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err)=> {\r\n            dispatch({ type: 'LOGIN_ERROR', err})\r\n        })\r\n    }    \r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState) => {\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n        const firestore = getFirestore()\r\n        console.log(firestore, newUser)\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res)=> {\r\n            console.log(res)\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.userFirstName,\r\n                lastName: newUser.userLastName,\r\n                initials: newUser.userFirstName[0] + newUser.userLastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>            \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const renderNavbarAfterAuth = () => {\r\n        if (props.auth.isLoaded ) {\r\n            return (\r\n               <div className=\"container\">\r\n               <Link to='/' className='brand-logo'>AleksPlan</Link>\r\n               {props.auth.uid ? <SignedInLinks profile={props.profile}/> : <SignedOutLinks />}          \r\n           </div>\r\n            )       \r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (\r\n     <nav className=\"nav-wrapper grey darken-3\">\r\n         { renderNavbarAfterAuth() }\r\n         \r\n     </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react'\r\n\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className='notification'>\r\n                        { props.notifications && props.notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications ","const initiState = {\r\n    projects: [\r\n        {id:'1', title: 'help', content: 'hep blah'},\r\n        {id:'2', title: 'help2', content: 'hep blah2'},\r\n        {id:'3', title: 'help3', content: 'hep blah3'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initiState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project:', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('created project error:', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import React from 'react'\r\nimport projectReducer from '../../store/reducers/projectReducer';\r\n\r\n// library to form a date\r\nimport moment from 'moment' \r\n\r\nconst ProjectSummary = ({project}) => {\r\n    console.log(project)\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"poject-list section\">\r\n            { projects && projects.map(project => \r\n            <Link to={`/project/${project.id}`} key={project.id}>\r\n                <ProjectSummary project={project} key={project.id}/>    \r\n            </Link>\r\n            )}   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport Notification from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\n\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst Dashboard  = props => {\r\n    const { projects } = props\r\n\r\n        return (\r\n            <div className=\"dashboard container\">                \r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notification notifications={props.notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => { \r\n    //console.log(state)\r\n    return {        \r\n        projects: state.firestore.ordered.projects,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] },\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\n// library to form a date\r\nimport moment from 'moment' \r\n\r\n// here  const id = props.match.params.id is taken from /:id path\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project } = props\r\n    if (project) {\r\n        return(\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{ project.title }</span>\r\n                    <p>{ project.content }</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n                    <div>{ moment(project.createdAt.toDate()).calendar() }</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n        <div className=\"container center\">\r\n            <p>Loading project...</p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\n\r\nfunction SignIn(props) {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault()\r\n                props.signIn({email, password})\r\n                props.history.push('/')\r\n            }} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id='email' onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id='password' onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn red lighten-1 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                        { props.authError ? <p>{props.authError}</p> : null }\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signIn: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nfunction SignUp(props) {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [userFirstName, setUserFirstName] = useState('')\r\n    const [userLastName, setUserLastName] = useState('')    \r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault()                \r\n                props.signUp({email, password, userFirstName, userLastName})\r\n                props.history.push('/')\r\n            }} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id='email' onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id='password' onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" id='firstName' onChange={(e) => setUserFirstName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastName\">First Name</label>\r\n                    <input type=\"text\" id='lastName' onChange={(e) => setUserLastName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn red lighten-1 z-depth-0\">Sign Up</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispath => {\r\n    return {\r\n        signUp: (newUser) => dispath(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp)\r\n","export const createProject = project => {\r\n    // since we use thunk in the store, we can return a function\r\n    return (dispatch, getState, { getFirebase, getFirestore }) =>{\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        console.log(profile, authorId)\r\n        firestore.collection('projects').add({ \r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n        \r\n    }    \r\n}","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions.js'\r\n\r\nfunction CreateProject(props) {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [content, setContent] = useState('')\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault()\r\n                props.createProject({title, content})\r\n                props.history.push('/')\r\n\r\n                \r\n            }} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id='title' onChange={(e) => setTitle(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Project Content</label>\r\n                    <textarea id=\"content\" className=\"materialize-textarea\" onChange={(e) => setContent(e.target.value)}></textarea>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn red lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateProject)\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn.js'\nimport SignUp from './components/auth/SignUp.js'\nimport CreateProject from'./components/projects/CreateProject.js'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} /> \n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initiState = {\r\n    authError: null \r\n}\r\n\r\nconst authReducer = (state = initiState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'LOGIN_ERROR':\r\n            console.log('login failed')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signed out')\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signed up')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signed up error', action.err.message)\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","import authReducer from './authReducer.js'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n// pass them as extra arguments (catch in actions)\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\n\nimport fbConfig from './config/fbConfig.js'\n\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore })),\n        reduxFirestore(fbConfig),\n    )\n  )\n\n\n  // react-redux-firebase config\nconst rrfConfig = {   \n   attachAuthIsReady: true,\n   useFirestoreForProfile: true, // gives properties of the current user to firebase.access it everywhere in the app when a user is logged in\n   userProfile: 'users',\n    // enableClaims: true // Get custom claims along with the profile\n  }\n  \n\nconst rrfProps = {\n    firebase: fbConfig,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n}\n\nReactDOM.render(<Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n    </ReactReduxFirebaseProvider>\n</Provider>, document.getElementById('root'));\n"],"sourceRoot":""}